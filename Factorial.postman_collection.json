{
    "info": {
        "_postman_id": "b7f8e8f0-b04a-4b5f-9727-3406f5f96716",
        "name": "Factorial",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [{
            "name": "0",
            "event": [{
                "listen": "test",
                "script": {
                    "exec": [
                        "//1) Статус код 200",
                        "pm.test(\"Status code is 200\", function () {",
                        "    pm.response.to.have.status(200)",
                        "});",
                        "",
                        "//2) Правильность расчета факториала",
                        "let jsonResp=pm.response.json();",
                        "let jsonReq=request.data;",
                        "let n=jsonReq.number;",
                        "let result=1;",
                        "for (let i = 1; i <= n; i++) {result = result * i}; ",
                        "console.log(result);",
                        "pm.test(\"Right factorial response\", function() {",
                        "    pm.expect(jsonResp.answer).to.equal(result)",
                        "});",
                        "",
                        "//3) Проверка структуры json ответа",
                        "let schema={",
                        "\"type\":\"object\",",
                        "           \"properties\": {\"answer\":{\"type\":\"number\"}},",
                        "\"required\":[\"answer\"]",
                        "};",
                        "   ",
                        "pm.test(\"Schema is valid\",function ()",
                        " {pm.response.to.have.jsonSchema(schema)",
                        " })",
                        "",
                        "",
                        ""
                    ],
                    "type": "text/javascript"
                }
            }],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "formdata",
                    "formdata": [{
                        "key": "number",
                        "value": "0",
                        "type": "default"
                    }],
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{url}}",
                    "host": [
                        "{{url}}"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "1",
            "event": [{
                "listen": "test",
                "script": {
                    "exec": [
                        "//1) Статус код 200",
                        "pm.test(\"Status code is 200\", function () {",
                        "    pm.response.to.have.status(200)",
                        "});",
                        "",
                        "//2) Правильность расчета факториала",
                        "let jsonResp=pm.response.json();",
                        "let jsonReq=request.data;",
                        "let n=jsonReq.number;",
                        "let result=1;",
                        "for (let i = 1; i <= n; i++) {result = result * i}; ",
                        "console.log(result);",
                        "pm.test(\"Right factorial response\", function() {",
                        "    pm.expect(jsonResp.answer).to.equal(result)",
                        "});",
                        "",
                        "//3) Проверка структуры json ответа",
                        "let schema={",
                        "\"type\":\"object\",",
                        "           \"properties\": {\"answer\":{\"type\":\"number\"}},",
                        "\"required\":[\"answer\"]",
                        "};",
                        "   ",
                        "pm.test(\"Schema is valid\",function ()",
                        " {pm.response.to.have.jsonSchema(schema)",
                        " })"
                    ],
                    "type": "text/javascript"
                }
            }],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "formdata",
                    "formdata": [{
                        "key": "number",
                        "value": "1",
                        "type": "default"
                    }]
                },
                "url": {
                    "raw": "{{url}}",
                    "host": [
                        "{{url}}"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "11",
            "event": [{
                "listen": "test",
                "script": {
                    "exec": [
                        "///1) Статус код 200",
                        "pm.test(\"Status code is 200\", function () {",
                        "    pm.response.to.have.status(200)",
                        "});",
                        "",
                        "//2) Правильность расчета факториала",
                        "let jsonResp=pm.response.json();",
                        "let jsonReq=request.data;",
                        "let n=jsonReq.number;",
                        "let result=1;",
                        "for (let i = 1; i <= n; i++) {result = result * i}; ",
                        "console.log(result);",
                        "pm.test(\"Right factorial response\", function() {",
                        "    pm.expect(jsonResp.answer).to.equal(result)",
                        "});",
                        "",
                        "//3) Проверка структуры json ответа",
                        "let schema={",
                        "\"type\":\"object\",",
                        "           \"properties\": {\"answer\":{\"type\":\"number\"}},",
                        "\"required\":[\"answer\"]",
                        "};",
                        "   ",
                        "pm.test(\"Schema is valid\",function ()",
                        " {pm.response.to.have.jsonSchema(schema)",
                        " })"
                    ],
                    "type": "text/javascript"
                }
            }],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "formdata",
                    "formdata": [{
                        "key": "number",
                        "value": "11",
                        "type": "default"
                    }]
                },
                "url": {
                    "raw": "{{url}}",
                    "host": [
                        "{{url}}"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "100",
            "event": [{
                "listen": "test",
                "script": {
                    "exec": [
                        "//1) Статус код 200",
                        "pm.test(\"Status code is 200\", function () {",
                        "    pm.response.to.have.status(200)",
                        "});",
                        "",
                        "//2) Правильность расчета факториала",
                        "let jsonResp=pm.response.json();",
                        "let jsonReq=request.data;",
                        "let n=jsonReq.number;",
                        "let result=1;",
                        "for (let i = 1; i <= n; i++) {result = result * i}; ",
                        "console.log(result);",
                        "pm.test(\"Right factorial response\", function() {",
                        "    pm.expect(jsonResp.answer).to.equal(result)",
                        "});",
                        "",
                        "//3) Проверка структуры json ответа",
                        "let schema={",
                        "\"type\":\"object\",",
                        "           \"properties\": {\"answer\":{\"type\":\"number\"}},",
                        "\"required\":[\"answer\"]",
                        "};",
                        "   ",
                        "pm.test(\"Schema is valid\",function ()",
                        " {pm.response.to.have.jsonSchema(schema)",
                        " })"
                    ],
                    "type": "text/javascript"
                }
            }],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "formdata",
                    "formdata": [{
                        "key": "number",
                        "value": "100",
                        "type": "default"
                    }]
                },
                "url": {
                    "raw": "{{url}}",
                    "host": [
                        "{{url}}"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "1000",
            "event": [{
                "listen": "test",
                "script": {
                    "exec": [
                        "//1) Статус код 200",
                        "pm.test(\"Status code is 200\", function () {",
                        "    pm.response.to.have.status(200)",
                        "});",
                        "",
                        "//2) Правильность расчета факториала",
                        "let jsonResp=pm.response.json();",
                        "let jsonReq=request.data;",
                        "let n=jsonReq.number;",
                        "let result=1;",
                        "for (let i = 1; i <= n; i++) {result = result * i}; ",
                        "console.log(result);",
                        "pm.test(\"Right factorial response\", function() {",
                        "    pm.expect(jsonResp.answer).to.equal(result)",
                        "});",
                        "",
                        "//3) Проверка структуры json ответа",
                        "let schema={",
                        "\"type\":\"object\",",
                        "           \"properties\": {\"answer\":{\"type\":\"number\"}},",
                        "\"required\":[\"answer\"]",
                        "};",
                        "   ",
                        "pm.test(\"Schema is valid\",function ()",
                        " {pm.response.to.have.jsonSchema(schema)",
                        " })"
                    ],
                    "type": "text/javascript"
                }
            }],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "formdata",
                    "formdata": [{
                        "key": "number",
                        "value": "1000",
                        "type": "default"
                    }]
                },
                "url": {
                    "raw": "{{url}}",
                    "host": [
                        "{{url}}"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "5000",
            "event": [{
                "listen": "test",
                "script": {
                    "exec": [
                        "//1) Статус код 200",
                        "pm.test(\"Status code is 200\", function () {",
                        "    pm.response.to.have.status(200)",
                        "});",
                        "",
                        "//2) Правильность расчета факториала",
                        "let jsonResp=pm.response.json();",
                        "let jsonReq=request.data;",
                        "let n=jsonReq.number;",
                        "let result=1;",
                        "for (let i = 1; i <= n; i++) {result = result * i}; ",
                        "console.log(result);",
                        "pm.test(\"Right factorial response\", function() {",
                        "    pm.expect(jsonResp.answer).to.equal(result)",
                        "});",
                        "",
                        "//3) Проверка структуры json ответа",
                        "let schema={",
                        "\"type\":\"object\",",
                        "           \"properties\": {\"answer\":{\"type\":\"number\"}},",
                        "\"required\":[\"answer\"]",
                        "};",
                        "   ",
                        "pm.test(\"Schema is valid\",function ()",
                        " {pm.response.to.have.jsonSchema(schema)",
                        " })"
                    ],
                    "type": "text/javascript"
                }
            }],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "formdata",
                    "formdata": [{
                        "key": "number",
                        "value": "5000",
                        "type": "default"
                    }]
                },
                "url": {
                    "raw": "{{url}}",
                    "host": [
                        "{{url}}"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Invalid Method",
            "event": [{
                "listen": "test",
                "script": {
                    "exec": [
                        "pm.test(\"Status code is 405 not allowed\", function () {",
                        "    pm.response.to.have.status(405)",
                        "})"
                    ],
                    "type": "text/javascript"
                }
            }],
            "request": {
                "method": "PUT",
                "header": [],
                "body": {
                    "mode": "formdata",
                    "formdata": [{
                        "key": "number",
                        "value": "5",
                        "type": "default"
                    }]
                },
                "url": {
                    "raw": "{{url}}",
                    "host": [
                        "{{url}}"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Invalid_value_Letter",
            "event": [{
                "listen": "test",
                "script": {
                    "exec": [
                        "//1) Статус код 400",
                        "pm.test(\"Status code is 400\", function () {",
                        "    pm.response.to.have.status(400)",
                        "})",
                        "",
                        ""
                    ],
                    "type": "text/javascript"
                }
            }],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "formdata",
                    "formdata": [{
                        "key": "number",
                        "value": "a",
                        "type": "default"
                    }]
                },
                "url": {
                    "raw": "{{url}}",
                    "host": [
                        "{{url}}"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Invalid_value_negativ_number",
            "event": [{
                "listen": "test",
                "script": {
                    "exec": [
                        "//1) Статус код 400",
                        "pm.test(\"Status code is 400\", function () {",
                        "    pm.response.to.have.status(400)",
                        "})",
                        ""
                    ],
                    "type": "text/javascript"
                }
            }],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "formdata",
                    "formdata": [{
                        "key": "number",
                        "value": "-1",
                        "type": "default"
                    }]
                },
                "url": {
                    "raw": "{{url}}",
                    "host": [
                        "{{url}}"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Invalid_value_0.5",
            "event": [{
                "listen": "test",
                "script": {
                    "exec": [
                        "//1) Статус код 400",
                        "pm.test(\"Status code is 400\", function () {",
                        "    pm.response.to.have.status(400)",
                        "})",
                        ""
                    ],
                    "type": "text/javascript"
                }
            }],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "formdata",
                    "formdata": [{
                        "key": "number",
                        "value": "0.5",
                        "type": "default"
                    }]
                },
                "url": {
                    "raw": "{{url}}",
                    "host": [
                        "{{url}}"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Invalid_format_data_request_json",
            "event": [{
                "listen": "test",
                "script": {
                    "exec": [
                        "//1) Статус код 400",
                        "pm.test(\"Status code is 400\", function () {",
                        "    pm.response.to.have.status(400)",
                        "})",
                        ""
                    ],
                    "type": "text/javascript"
                }
            }],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\"number\":5}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{url}}",
                    "host": [
                        "{{url}}"
                    ]
                }
            },
            "response": []
        }
    ]
}
